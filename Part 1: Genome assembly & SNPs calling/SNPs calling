# The SNPs calling steps from 1 to 4 was run through the pipeline writen by Rita Tam in Schwessinger's lab. 

1, map short reads of each strain against the reference genome and obtain the statistic summary of the alignments

'''
bwa-mem2 mem -R r"@RG\tID:{sample}\tSM:{sample}\tPL:ILLUMINA\tLB:{sample}_lib1" -t 12 genome.fasta read1.fq read2.fq | samtools sort -O BAM -@ 12 -o output.bam -'
&& samtools index -@ 12 output.bam

samtools stats -@ 12 input.bam} > output.samstats"
'''

2, remove PCR duplicates from the alignment bam files

'''
picard MarkDuplicates -I input.bam -O output.bam -M output.metrics --REMOVE_DUPLICATES true
'''

3, merge the alignment bam files, for example, merging three files:

'''
samtools merge -@ 12 output.merged.bam alignment1.bam alignment2.bam alignment3.bam 
'''

4, Index the reference genome and use freebayes to generate SNPs:

'''
samtools faidx {config[bwa_ref_fa]}

freebayes-parallel <(fasta_generate_regions.py genome.fai 100000) 20 -f genome.fa input.merged.bam > output.vcf
'''

5, SNPs quality filtering:
vcftools --gzvcf input.vcf.gz --remove-indels --max-missing 0.9 --minQ 30 --maxDP 120 --recode --stdout | gzip -c > filtered.vcf.gz

6, Count SNP num in vcf file:

'''
bcftools view -H S1_3_SNP.vcf | wc -l
'''

7, To split vcf depending on samples:

'''
for file in {file.vcf}; do

  for sample in `bcftools view -h $file | grep "^#CHROM" | cut -f10-`; do

    bcftools view -c1 -Oz -s $sample -o ${file/.vcf*/.$sample.vcf.gz} $file

  done

done
'''

8, Count homo and hetero SNPs:

'''
plink2 --vcf file.vcf.gz --out  --sample-counts cols=hom,het --allow-extra-chr
'''
